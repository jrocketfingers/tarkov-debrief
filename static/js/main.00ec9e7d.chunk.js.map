{"version":3,"sources":["App.tsx","interchange.png","icons/select.svg","icons/pencil.svg","icons/eraser.svg","icons/undo.svg","icons/marker.svg","icons/save.svg","icons/pmc-thick.svg","icons/pmc-med.svg","icons/pmc-light.svg","icons/scav.svg","reportWebVitals.ts","index.tsx"],"names":["backgroundImage","defaultSize","width","height","unerasable","Set","markerCache","PENCIL_COLOR","SidebarSection","title","children","className","App","containerRef","useRef","useState","type","active","onClick","cursor","tool","_setTool","toolRef","color","setColor","_setMarker","markerRef","canvas","setCanvas","sidebar","setSidebar","setTool","value","off","on","defaultCursor","hoverCursor","isDrawingMode","current","selectMarker","evt","target","src","placeMarker","a","cachedImage","Promise","resolve","fabric","Image","fromURL","newImage","clone","image","pointer","getPointer","e","left","x","top","y","zoom","getZoom","scale","add","useEffect","Canvas","perPixelTargetFind","selection","freeDrawingBrush","setCursor","pencilIcon","initializeCanvas","woodsMapUrl","selectable","getSrc","clearHistory","opt","has","remove","event","delta","deltaY","zoomToPoint","offsetX","offsetY","preventDefault","stopPropagation","resizeListener","offsetWidth","offsetHeight","setDimensions","window","addEventListener","document","key","ctrlKey","undo","removeEventListener","selectIcon","alt","eraserIcon","undoIcon","addMarkerIcon","url","name","link","createElement","download","href","body","appendChild","click","removeChild","startDownload","toDataURL","multiplier","saveIcon","id","thickPMCMarker","mediumPMCMarker","lightPMCMarker","scavMarker","triangle","onChangeComplete","hex","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.00ec9e7d.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { fabric } from \"fabric\";\nimport { ColorResult, TwitterPicker } from \"react-color\";\nimport \"fabric-history\";\nimport woodsMapUrl from \"./interchange.png\";\nimport \"./App.css\";\nimport \"./Sidebar.css\";\n\nimport selectIcon from \"./icons/select.svg\";\nimport pencilIcon from \"./icons/pencil.svg\";\nimport eraserIcon from \"./icons/eraser.svg\";\nimport undoIcon from \"./icons/undo.svg\";\nimport addMarkerIcon from \"./icons/marker.svg\";\nimport saveIcon from \"./icons/save.svg\";\n\nimport thickPMCMarker from \"./icons/pmc-thick.svg\";\nimport mediumPMCMarker from \"./icons/pmc-med.svg\";\nimport lightPMCMarker from \"./icons/pmc-light.svg\";\nimport scavMarker from \"./icons/scav.svg\";\nimport { IEvent } from \"fabric/fabric-impl\";\n\ntype Size = { width: number; height: number };\n\nconst defaultSize: Size = { width: 300, height: 300 };\nlet backgroundImage: fabric.Image;\nlet unerasable = new Set<string>();\n\ntype Tool = {\n  active: boolean,\n  type: 'select' | 'pencil' | 'eraser' | 'marker',\n  onClick: null | ((evt: IEvent) => void),\n  cursor: null | string,\n};\n\nfunction startDownload(url: string, name: string) : void {\n  const link = document.createElement('a');\n  link.download = name;\n  link.href = url;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n\nconst brushWidth = 5;\nconst markerCache: Record<string, fabric.Image> = {};\nconst PENCIL_COLOR: string = \"#f00\";\n\nfunction initializeCanvas() { \n  const canvas = new fabric.Canvas('canvas', {\n    height: defaultSize.height,\n    width: defaultSize.width,\n    //isDrawingMode: true,\n    perPixelTargetFind: true,\n    selection: false,\n  });\n\n  canvas.freeDrawingBrush.color = PENCIL_COLOR;\n  canvas.freeDrawingBrush.width = brushWidth;\n\n  canvas.setCursor(`url(${pencilIcon})`);\n\n  return canvas;\n}\n\ninterface SidebarSectionProps {\n  title: string,\n  children: React.ReactNode,\n}\n\nfunction SidebarSection({ title, children }: SidebarSectionProps) {\n  return <div className=\"sidebar-section\">\n    <h1 className=\"sidebar-section-title\">\n      {title}\n    </h1>\n    <div className=\"sidebar-section-content\">\n      {children}\n    </div>\n  </div>\n}\n\nfunction App() {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [tool, _setTool] = useState<Tool>({\n    type: 'pencil',\n    active: true,\n    onClick: null,\n    cursor: null,\n  });\n  const toolRef = useRef<Tool>({\n    type: 'pencil',\n    active: true,\n    onClick: null,\n    cursor: null,\n  });\n  const [color, setColor] = useState<string>(PENCIL_COLOR);\n  const [, _setMarker] = useState<string | null>(null);\n  const markerRef = useRef<string | null>(null);\n  const [canvas, setCanvas] = useState<fabric.Canvas | null>(null);\n  const [sidebar, setSidebar] = useState<boolean>(false);\n\n  /**\n   * Sets the current tool and resets canvas listeners.\n   * \n   * @param value: Tool\n   */\n  const setTool = (value: Tool) => {\n    // switch listeners (tool is old state, value is new)\n    if (canvas) {\n      if (tool.onClick) canvas.off('mouse:up', tool.onClick);\n      if (value.onClick) canvas.on('mouse:up', value.onClick);\n\n      if (value.cursor === null) {\n        canvas.defaultCursor = 'auto';\n        canvas.hoverCursor = 'auto';\n      } else {\n        canvas.defaultCursor = value.cursor;\n        canvas.hoverCursor = canvas.defaultCursor;\n      }\n\n      if (value.type === 'pencil') {\n        canvas.isDrawingMode = true;\n      } else {\n        canvas.isDrawingMode = false;\n      }\n    }\n    setSidebar(false);\n\n    _setTool(value);\n    toolRef.current = value;\n  }\n\n  const setMarker = (value: string) => {\n    _setMarker(value);\n    markerRef.current = value;\n  }\n\n  const changeColor = (color: ColorResult) => {\n    setColor(color.hex);\n    if (canvas) {\n      canvas.freeDrawingBrush.color = color.hex;\n    }\n  }\n\n  const save = () => {\n    if (canvas) {\n      const url = canvas.toDataURL({ multiplier: 3 });\n      startDownload(url, \"startegy.png\");\n    }\n  }\n\n  const select = () => {\n    setTool({...tool, type: 'select', cursor: null, onClick: null});\n    if (canvas) {\n      canvas.isDrawingMode = false;\n      canvas.selection = true;\n    }\n  }\n\n  const pencil = () => {\n    setTool({...tool, type: 'pencil', cursor: null, onClick: null});\n    if (canvas) {\n      canvas.isDrawingMode = true;\n    }\n  }\n\n  const eraser = () => {\n    setTool({...tool, type: 'eraser', cursor: null, onClick: null});\n    if (canvas) {\n      canvas.isDrawingMode = false;\n      canvas.selection = false;\n    }\n  }\n\n  const undo = () => {\n    if (canvas) {\n      canvas.undo();\n    }\n  }\n\n  const showSidebar = () => {\n    setSidebar(true);\n  }\n\n  const hideSidebar = () => {\n    setSidebar(false);\n  }\n\n  const selectMarker = (evt: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    const target = evt.target as HTMLImageElement;\n    setMarker(target.src);\n\n    const cursor = `url(${target.src}), auto`;\n    setTool({...tool, type: 'marker', onClick: placeMarker, cursor});\n  }\n\n  const placeMarker = async (evt: IEvent) => {\n    if (markerRef && markerRef.current) {\n      let cachedImage = markerCache[markerRef.current];\n      if (!cachedImage) {\n        const newImage: fabric.Image = await new Promise(resolve => fabric.Image.fromURL(markerRef.current!, resolve));\n        markerCache[markerRef.current!] = newImage;\n        cachedImage = newImage;\n      }\n\n      const image: fabric.Image = await new Promise(resolve => cachedImage.clone(resolve));\n      const pointer = canvas!.getPointer(evt.e);\n      image.left = pointer.x;\n      image.top = pointer.y;\n\n      const zoom = canvas!.getZoom();\n      image.scale(1 / zoom);\n\n      canvas!.add(image);\n    }\n  }\n\n  // TODO consider useLayoutEffect\n  useEffect(() => {\n    if (!canvas) {\n      const canvas = initializeCanvas();\n      setCanvas(canvas);\n\n      fabric.Image.fromURL(woodsMapUrl, (image) => {\n        image.canvas = canvas;\n        image.selectable = false;\n        backgroundImage = image;\n        unerasable.add(backgroundImage.getSrc());\n        canvas.add(image);\n        canvas!.clearHistory();\n      });\n\n      canvas.on('mouse:down', (opt) => {\n        setTool({...toolRef.current, active: true});\n      });\n\n      canvas.on('mouse:up', (opt) => {\n        setTool({...toolRef.current, active: false});\n      });\n\n      canvas.on('mouse:move', (opt) => {\n        if (opt.target === null) return;\n        if (opt.target instanceof fabric.Image && unerasable.has(opt.target.getSrc())) return;\n        if (toolRef.current.type === 'eraser'\n            && toolRef.current.active) {\n          canvas.remove(opt.target!);\n        }\n      });\n\n      canvas.on('mouse:wheel', function(opt) {\n        const event = opt.e as WheelEvent;\n        const delta = event.deltaY;\n        let zoom = canvas.getZoom();\n        zoom *= 0.999 ** delta;\n        if (zoom > 20) zoom = 20;\n        if (zoom < 0.01) zoom = 0.01;\n        canvas.zoomToPoint({ x: event.offsetX, y: event.offsetY } as fabric.Point, zoom);\n        canvas.freeDrawingBrush.width = brushWidth / zoom;\n        opt.e.preventDefault();\n        opt.e.stopPropagation();\n      });\n    }\n\n    function resizeListener() {\n      if (containerRef.current) {\n        const width = containerRef.current.offsetWidth;\n        const height = containerRef.current.offsetHeight;\n        canvas?.setDimensions({ width, height });\n      } else {\n        canvas?.setDimensions(defaultSize);\n      }\n    }\n\n    resizeListener();\n\n    function undoListener({ key, ctrlKey }: KeyboardEvent) {\n      if(ctrlKey && key === \"z\") {\n        if (canvas) canvas.undo();\n      }\n    }\n\n    window.addEventListener(\"resize\", resizeListener);\n    document.addEventListener(\"keyup\", undoListener);\n    return () => {\n      window.removeEventListener(\"resize\", resizeListener);\n    }\n  }, [containerRef, canvas]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p className=\"title\">Tarkov Debrief</p>\n        <section className=\"App-header-buttons\">\n          <button onClick={select}><img src={selectIcon} alt=\"select\" /></button>\n          <button onClick={pencil}><img src={pencilIcon} alt=\"pencil\" /></button>\n          <button onClick={eraser}><img src={eraserIcon} alt=\"eraser\" /></button>\n          <button onClick={undo}><img src={undoIcon} alt=\"undo\" /></button>\n          <button onClick={showSidebar}><img src={addMarkerIcon} alt=\"undo\" /></button>\n          <button onClick={save}><img className=\"App-header-buttons-save\" src={saveIcon} alt=\"save\" /></button>\n        </section>\n      </header>\n      <aside className={sidebar ? \"enter\" : \"\"}>\n        <section onClick={hideSidebar} id=\"closeArea\"></section>\n        <section id=\"sidebar\">\n          <SidebarSection title=\"Markers\">\n            <button onClick={selectMarker}><img src={thickPMCMarker} alt=\"thick PMC\" /></button>\n            <button onClick={selectMarker}><img src={mediumPMCMarker} alt=\"medium PMC\" /></button>\n            <button onClick={selectMarker}><img src={lightPMCMarker} alt=\"light PMC\" /></button>\n            <button onClick={selectMarker}><img src={scavMarker} alt=\"light PMC\" /></button>\n          </SidebarSection>\n          <SidebarSection title=\"\">\n            <TwitterPicker\n\t\t\t  color={color}\n\t\t\t  triangle=\"hide\"\n              onChangeComplete={changeColor}></TwitterPicker>\n          </SidebarSection>\n        </section>\n      </aside>\n      <div className=\"Canvas\" ref={containerRef}>\n        <canvas id=\"canvas\">\n        </canvas>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/interchange.d1c1fd49.png\";","export default __webpack_public_path__ + \"static/media/select.a36d8019.svg\";","export default __webpack_public_path__ + \"static/media/pencil.6f256236.svg\";","export default __webpack_public_path__ + \"static/media/eraser.fa7a8623.svg\";","export default __webpack_public_path__ + \"static/media/undo.ccba6760.svg\";","export default __webpack_public_path__ + \"static/media/marker.79266f62.svg\";","export default __webpack_public_path__ + \"static/media/save.d3fc937a.svg\";","export default __webpack_public_path__ + \"static/media/pmc-thick.e9f45228.svg\";","export default __webpack_public_path__ + \"static/media/pmc-med.c746c927.svg\";","export default __webpack_public_path__ + \"static/media/pmc-light.62ae8236.svg\";","export default __webpack_public_path__ + \"static/media/scav.638c46be.svg\";","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}